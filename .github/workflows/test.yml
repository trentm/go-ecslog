name: Test

on:
  push:
    branches:
    - main
    paths-ignore:
    - '*.md'
  pull_request:
    branches:
    - main
    paths-ignore:
    - '*.md'

jobs:
  # Test once on every (available) plat, using latest Go.
  test-plats:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.16.x']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: '1.16.x'
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: go test ./cmd/... ./internal/...

  # Test once for every other supported Go version. Only test on one platform
  # to not overkill the number of builds.
  test-vers:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: ['1.14.x', '1.15.x']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: go test ./cmd/... ./internal/...
